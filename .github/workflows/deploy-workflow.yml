name: deploy-workflow

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: runmates-back
            path: apps/runmates-back
            image: registry.fly.io/runmates-back:latest
            config: apps/runmates-back/fly.toml
          - name: landing-page
            path: apps/landing-page
            image: registry.fly.io/rm-landing-page:latest
            config: apps/landing-page/fly.toml

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Flyctl
        id: flyctl-cache
        uses: actions/cache@v3
        with:
          path: ~/.fly
          key: flyctl-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            flyctl-${{ runner.os }}-

      - name: Install Flyctl (if not cached)
        if: steps.flyctl-cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      - name: Determine if app is affected
        id: affected
        run: |
          PARENT_COMMIT=$(git rev-parse HEAD^)
          if git diff $PARENT_COMMIT..HEAD --name-only -- ${{ matrix.app.path }} | grep .; then
            echo "affected=true" >> $GITHUB_OUTPUT
          else
            echo "affected=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug affected output
        run: |
          echo "Affected: ${{ steps.affected.outputs.affected }}"

      - name: Log in to Fly.io
        if: steps.affected.outputs.affected == 'true'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl auth docker

      - name: Build Docker Image
        if: steps.affected.outputs.affected == 'true'
        run: npx nx docker-build ${{ matrix.app.name }}

      - name: Tag Docker Image
        if: steps.affected.outputs.affected == 'true'
        run: docker tag ${{ matrix.app.name }} ${{ matrix.app.image }}

      - name: List Docker Images
        if: steps.affected.outputs.affected == 'true'
        run: docker images

      - name: Push Docker Image to Fly.io
        if: steps.affected.outputs.affected == 'true'
        run: docker push ${{ matrix.app.image }}

      - name: Deploy to Fly.io
        if: steps.affected.outputs.affected == 'true'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --image ${{ matrix.app.image }} --config ${{ matrix.app.config }}